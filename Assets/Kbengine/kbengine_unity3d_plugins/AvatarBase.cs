/*
	Generated by KBEngine!
	Please do not modify this file!
	Please inherit this module, such as: (class Avatar : AvatarBase)
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;

	// defined in */scripts/entity_defs/Avatar.def
	public abstract class AvatarBase : Entity
	{
		public EntityBaseEntityCall_AvatarBase baseEntityCall = null;
		public EntityCellEntityCall_AvatarBase cellEntityCall = null;

		public UInt16 anYeYiYangGold = 2;
		public virtual void onAnYeYiYangGoldChanged(UInt16 oldValue) {}
		public string animState = "idle";
		public virtual void onAnimStateChanged(string oldValue) {}
		public UInt16 goldNum = 0;
		public virtual void onGoldNumChanged(UInt16 oldValue) {}
		public UInt16 jiaSuGold = 2;
		public virtual void onJiaSuGoldChanged(UInt16 oldValue) {}
		public UInt16 keepJiaSuTime = 1;
		public virtual void onKeepJiaSuTimeChanged(UInt16 oldValue) {}
		public float moveSpeed = 1f;
		public virtual void onMoveSpeedChanged(float oldValue) {}
		public string name = "";
		public virtual void onNameChanged(string oldValue) {}
		public UInt16 nanShangJiaNanGold = 2;
		public virtual void onNanShangJiaNanGoldChanged(UInt16 oldValue) {}
		public Byte track = 0;
		public virtual void onTrackChanged(Byte oldValue) {}
		public UInt16 xiaCiYiDingGold = 2;
		public virtual void onXiaCiYiDingGoldChanged(UInt16 oldValue) {}

		public abstract void ArriveDefeat(UInt32 arg1); 
		public abstract void ArriveSuccess(); 
		public abstract void jumpToPosition(Vector3 arg1); 
		public abstract void startGameSecond(Byte arg1); 

		public override void onGetBase()
		{
			baseEntityCall = new EntityBaseEntityCall_AvatarBase();
			baseEntityCall.id = id;
			baseEntityCall.className = className;
		}

		public override void onGetCell()
		{
			cellEntityCall = new EntityCellEntityCall_AvatarBase();
			cellEntityCall.id = id;
			cellEntityCall.className = className;
		}

		public override void onLoseCell()
		{
			cellEntityCall = null;
		}

		public override EntityCall getBaseEntityCall()
		{
			return baseEntityCall;
		}

		public override EntityCall getCellEntityCall()
		{
			return cellEntityCall;
		}

		public override void onRemoteMethodCall(Method method, MemoryStream stream)
		{
			switch(method.methodUtype)
			{
				case 34:
					UInt32 ArriveDefeat_arg1 = stream.readUint32();
					ArriveDefeat(ArriveDefeat_arg1);
					break;
				case 33:
					ArriveSuccess();
					break;
				case 36:
					Vector3 jumpToPosition_arg1 = stream.readVector3();
					jumpToPosition(jumpToPosition_arg1);
					break;
				case 32:
					Byte startGameSecond_arg1 = stream.readUint8();
					startGameSecond(startGameSecond_arg1);
					break;
				default:
					break;
			};
		}

		public override void onUpdatePropertys(Property prop, MemoryStream stream)
		{
			switch(prop.properUtype)
			{
				case 21:
					UInt16 oldval_anYeYiYangGold = anYeYiYangGold;
					anYeYiYangGold = stream.readUint16();

					if(prop.isBase())
					{
						if(inited)
							onAnYeYiYangGoldChanged(oldval_anYeYiYangGold);
					}
					else
					{
						if(inWorld)
							onAnYeYiYangGoldChanged(oldval_anYeYiYangGold);
					}

					break;
				case 18:
					string oldval_animState = animState;
					animState = stream.readUnicode();

					if(prop.isBase())
					{
						if(inited)
							onAnimStateChanged(oldval_animState);
					}
					else
					{
						if(inWorld)
							onAnimStateChanged(oldval_animState);
					}

					break;
				case 40001:
					Vector3 oldval_direction = direction;
					direction = stream.readVector3();

					if(prop.isBase())
					{
						if(inited)
							onDirectionChanged(oldval_direction);
					}
					else
					{
						if(inWorld)
							onDirectionChanged(oldval_direction);
					}

					break;
				case 13:
					UInt16 oldval_goldNum = goldNum;
					goldNum = stream.readUint16();

					if(prop.isBase())
					{
						if(inited)
							onGoldNumChanged(oldval_goldNum);
					}
					else
					{
						if(inWorld)
							onGoldNumChanged(oldval_goldNum);
					}

					break;
				case 20:
					UInt16 oldval_jiaSuGold = jiaSuGold;
					jiaSuGold = stream.readUint16();

					if(prop.isBase())
					{
						if(inited)
							onJiaSuGoldChanged(oldval_jiaSuGold);
					}
					else
					{
						if(inWorld)
							onJiaSuGoldChanged(oldval_jiaSuGold);
					}

					break;
				case 19:
					UInt16 oldval_keepJiaSuTime = keepJiaSuTime;
					keepJiaSuTime = stream.readUint16();

					if(prop.isBase())
					{
						if(inited)
							onKeepJiaSuTimeChanged(oldval_keepJiaSuTime);
					}
					else
					{
						if(inWorld)
							onKeepJiaSuTimeChanged(oldval_keepJiaSuTime);
					}

					break;
				case 14:
					float oldval_moveSpeed = moveSpeed;
					moveSpeed = stream.readFloat();

					if(prop.isBase())
					{
						if(inited)
							onMoveSpeedChanged(oldval_moveSpeed);
					}
					else
					{
						if(inWorld)
							onMoveSpeedChanged(oldval_moveSpeed);
					}

					break;
				case 16:
					string oldval_name = name;
					name = stream.readUnicode();

					if(prop.isBase())
					{
						if(inited)
							onNameChanged(oldval_name);
					}
					else
					{
						if(inWorld)
							onNameChanged(oldval_name);
					}

					break;
				case 23:
					UInt16 oldval_nanShangJiaNanGold = nanShangJiaNanGold;
					nanShangJiaNanGold = stream.readUint16();

					if(prop.isBase())
					{
						if(inited)
							onNanShangJiaNanGoldChanged(oldval_nanShangJiaNanGold);
					}
					else
					{
						if(inWorld)
							onNanShangJiaNanGoldChanged(oldval_nanShangJiaNanGold);
					}

					break;
				case 40000:
					Vector3 oldval_position = position;
					position = stream.readVector3();

					if(prop.isBase())
					{
						if(inited)
							onPositionChanged(oldval_position);
					}
					else
					{
						if(inWorld)
							onPositionChanged(oldval_position);
					}

					break;
					case 40002:
						stream.readUint32();
						break;
				case 12:
					Byte oldval_track = track;
					track = stream.readUint8();

					if(prop.isBase())
					{
						if(inited)
							onTrackChanged(oldval_track);
					}
					else
					{
						if(inWorld)
							onTrackChanged(oldval_track);
					}

					break;
				case 22:
					UInt16 oldval_xiaCiYiDingGold = xiaCiYiDingGold;
					xiaCiYiDingGold = stream.readUint16();

					if(prop.isBase())
					{
						if(inited)
							onXiaCiYiDingGoldChanged(oldval_xiaCiYiDingGold);
					}
					else
					{
						if(inWorld)
							onXiaCiYiDingGoldChanged(oldval_xiaCiYiDingGold);
					}

					break;
				default:
					break;
			};
		}

		public override void callPropertysSetMethods()
		{
			ScriptModule sm = EntityDef.moduledefs[className];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

			UInt16 oldval_anYeYiYangGold = anYeYiYangGold;
			Property prop_anYeYiYangGold = pdatas[3];
			if(prop_anYeYiYangGold.isBase())
			{
				if(inited && !inWorld)
					onAnYeYiYangGoldChanged(oldval_anYeYiYangGold);
			}
			else
			{
				if(inWorld)
				{
					if(prop_anYeYiYangGold.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onAnYeYiYangGoldChanged(oldval_anYeYiYangGold);
					}
				}
			}

			string oldval_animState = animState;
			Property prop_animState = pdatas[4];
			if(prop_animState.isBase())
			{
				if(inited && !inWorld)
					onAnimStateChanged(oldval_animState);
			}
			else
			{
				if(inWorld)
				{
					if(prop_animState.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onAnimStateChanged(oldval_animState);
					}
				}
			}

			Vector3 oldval_direction = direction;
			Property prop_direction = pdatas[1];
			if(prop_direction.isBase())
			{
				if(inited && !inWorld)
					onDirectionChanged(oldval_direction);
			}
			else
			{
				if(inWorld)
				{
					if(prop_direction.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onDirectionChanged(oldval_direction);
					}
				}
			}

			UInt16 oldval_goldNum = goldNum;
			Property prop_goldNum = pdatas[5];
			if(prop_goldNum.isBase())
			{
				if(inited && !inWorld)
					onGoldNumChanged(oldval_goldNum);
			}
			else
			{
				if(inWorld)
				{
					if(prop_goldNum.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onGoldNumChanged(oldval_goldNum);
					}
				}
			}

			UInt16 oldval_jiaSuGold = jiaSuGold;
			Property prop_jiaSuGold = pdatas[6];
			if(prop_jiaSuGold.isBase())
			{
				if(inited && !inWorld)
					onJiaSuGoldChanged(oldval_jiaSuGold);
			}
			else
			{
				if(inWorld)
				{
					if(prop_jiaSuGold.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onJiaSuGoldChanged(oldval_jiaSuGold);
					}
				}
			}

			UInt16 oldval_keepJiaSuTime = keepJiaSuTime;
			Property prop_keepJiaSuTime = pdatas[7];
			if(prop_keepJiaSuTime.isBase())
			{
				if(inited && !inWorld)
					onKeepJiaSuTimeChanged(oldval_keepJiaSuTime);
			}
			else
			{
				if(inWorld)
				{
					if(prop_keepJiaSuTime.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onKeepJiaSuTimeChanged(oldval_keepJiaSuTime);
					}
				}
			}

			float oldval_moveSpeed = moveSpeed;
			Property prop_moveSpeed = pdatas[8];
			if(prop_moveSpeed.isBase())
			{
				if(inited && !inWorld)
					onMoveSpeedChanged(oldval_moveSpeed);
			}
			else
			{
				if(inWorld)
				{
					if(prop_moveSpeed.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onMoveSpeedChanged(oldval_moveSpeed);
					}
				}
			}

			string oldval_name = name;
			Property prop_name = pdatas[9];
			if(prop_name.isBase())
			{
				if(inited && !inWorld)
					onNameChanged(oldval_name);
			}
			else
			{
				if(inWorld)
				{
					if(prop_name.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onNameChanged(oldval_name);
					}
				}
			}

			UInt16 oldval_nanShangJiaNanGold = nanShangJiaNanGold;
			Property prop_nanShangJiaNanGold = pdatas[10];
			if(prop_nanShangJiaNanGold.isBase())
			{
				if(inited && !inWorld)
					onNanShangJiaNanGoldChanged(oldval_nanShangJiaNanGold);
			}
			else
			{
				if(inWorld)
				{
					if(prop_nanShangJiaNanGold.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onNanShangJiaNanGoldChanged(oldval_nanShangJiaNanGold);
					}
				}
			}

			Vector3 oldval_position = position;
			Property prop_position = pdatas[0];
			if(prop_position.isBase())
			{
				if(inited && !inWorld)
					onPositionChanged(oldval_position);
			}
			else
			{
				if(inWorld)
				{
					if(prop_position.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onPositionChanged(oldval_position);
					}
				}
			}

			Byte oldval_track = track;
			Property prop_track = pdatas[11];
			if(prop_track.isBase())
			{
				if(inited && !inWorld)
					onTrackChanged(oldval_track);
			}
			else
			{
				if(inWorld)
				{
					if(prop_track.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onTrackChanged(oldval_track);
					}
				}
			}

			UInt16 oldval_xiaCiYiDingGold = xiaCiYiDingGold;
			Property prop_xiaCiYiDingGold = pdatas[12];
			if(prop_xiaCiYiDingGold.isBase())
			{
				if(inited && !inWorld)
					onXiaCiYiDingGoldChanged(oldval_xiaCiYiDingGold);
			}
			else
			{
				if(inWorld)
				{
					if(prop_xiaCiYiDingGold.isOwnerOnly() && !isPlayer())
					{
					}
					else
					{
						onXiaCiYiDingGoldChanged(oldval_xiaCiYiDingGold);
					}
				}
			}

		}
	}
}