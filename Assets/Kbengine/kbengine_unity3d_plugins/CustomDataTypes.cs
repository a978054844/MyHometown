/*
	Generated by KBEngine!
	Please do not modify this file!
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;



	public class DATATYPE_FRIEND_INFO : DATATYPE_BASE
	{
		public FRIEND_INFO createFromStreamEx(MemoryStream stream)
		{
			FRIEND_INFO datas = new FRIEND_INFO();
			datas.dbid = stream.readUint64();
			datas.name = stream.readUnicode();
			datas.level = stream.readUint16();
			datas.status = stream.readUint16();
			datas.icon = stream.readUint16();
			return datas;
		}

		public void addToStreamEx(Bundle stream, FRIEND_INFO v)
		{
			stream.writeUint64(v.dbid);
			stream.writeUnicode(v.name);
			stream.writeUint16(v.level);
			stream.writeUint16(v.status);
			stream.writeUint16(v.icon);
		}
	}



	public class DATATYPE_FRIEND_INFO_LIST : DATATYPE_BASE
	{
		private DATATYPE_FRIEND_INFO itemType = new DATATYPE_FRIEND_INFO();

		public FRIEND_INFO_LIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			FRIEND_INFO_LIST datas = new FRIEND_INFO_LIST();

			while(size > 0)
			{
				--size;
				datas.Add(itemType.createFromStreamEx(stream));
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, FRIEND_INFO_LIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				itemType.addToStreamEx(stream, v[i]);
			};
		}
	}



	public class DATATYPE_ENTITYCALL_LIST : DATATYPE_BASE
	{
		public ENTITYCALL_LIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			ENTITYCALL_LIST datas = new ENTITYCALL_LIST();

			while(size > 0)
			{
				--size;
				datas.Add(stream.readEntitycall());
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, ENTITYCALL_LIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				stream.writeEntitycall(v[i]);
			};
		}
	}


}